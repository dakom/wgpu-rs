var searchIndex = JSON.parse('{\
"wgpu":{"doc":"A cross-platform graphics and compute library based on…","i":[[3,"AdapterInfo","wgpu","Metadata about a backend adapter.",null,null],[12,"name","","Adapter name",0,null],[12,"vendor","","Vendor PCI id of the adapter",0,null],[12,"device","","PCI id of the adapter",0,null],[12,"device_type","","Type of device",0,null],[12,"backend","","Backend used for device",0,null],[4,"DeviceType","","Supported physical device types",null,null],[13,"Other","","Other",1,null],[13,"IntegratedGpu","","Integrated",1,null],[13,"DiscreteGpu","","Discrete",1,null],[13,"VirtualGpu","","Virtual / Hosted",1,null],[13,"Cpu","","Cpu / Software Rendering",1,null],[4,"AddressMode","","",null,null],[13,"ClampToEdge","","",2,null],[13,"Repeat","","",2,null],[13,"MirrorRepeat","","",2,null],[4,"Backend","","",null,null],[13,"Empty","","",3,null],[13,"Vulkan","","",3,null],[13,"Metal","","",3,null],[13,"Dx12","","",3,null],[13,"Dx11","","",3,null],[13,"Gl","","",3,null],[13,"BrowserWebGpu","","",3,null],[3,"BackendBit","","",null,null],[3,"BindGroupLayoutDescriptor","","A description of a bind group layout.",null,null],[12,"label","","An optional label to apply to the bind group layout. This…",4,null],[12,"bindings","","",4,null],[3,"BindGroupLayoutEntry","","A description of a single binding inside a bind group.",null,null],[12,"binding","","",5,null],[12,"visibility","","",5,null],[12,"ty","","",5,null],[12,"count","","If this value is Some, indicates this entry is an array.…",5,null],[12,"_non_exhaustive","","This struct should be partially initalized using the…",5,null],[4,"BindingType","","Specific type of a binding. WebGPU spec:…",null,null],[13,"UniformBuffer","","A buffer for uniform values.",6,null],[12,"dynamic","wgpu::BindingType","Indicates that the binding has a dynamic offset. One…",7,null],[12,"min_binding_size","","Minimum size of the corresponding `BufferBinding` required…",7,null],[13,"StorageBuffer","wgpu","A storage buffer.",6,null],[12,"dynamic","wgpu::BindingType","Indicates that the binding has a dynamic offset. One…",8,null],[12,"min_binding_size","","Minimum size of the corresponding `BufferBinding` required…",8,null],[12,"readonly","","The buffer can only be read in the shader and it must be…",8,null],[13,"Sampler","wgpu","A sampler that can be used to sample a texture.",6,null],[12,"comparison","wgpu::BindingType","Use as a comparison sampler instead of a normal sampler.…",9,null],[13,"SampledTexture","wgpu","A texture.",6,null],[12,"dimension","wgpu::BindingType","Dimension of the texture view that is going to be sampled.",10,null],[12,"component_type","","Component type of the texture. This must be compatible…",10,null],[12,"multisampled","","True if the texture has a sample count greater than 1.",10,null],[13,"StorageTexture","wgpu","A storage texture.",6,null],[12,"dimension","wgpu::BindingType","Dimension of the texture view that is going to be sampled.",11,null],[12,"format","","Format of the texture.",11,null],[12,"readonly","","The texture can only be read in the shader and it must be…",11,null],[3,"BlendDescriptor","wgpu","",null,null],[12,"src_factor","","",12,null],[12,"dst_factor","","",12,null],[12,"operation","","",12,null],[4,"BlendFactor","","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SrcColor","","",13,null],[13,"OneMinusSrcColor","","",13,null],[13,"SrcAlpha","","",13,null],[13,"OneMinusSrcAlpha","","",13,null],[13,"DstColor","","",13,null],[13,"OneMinusDstColor","","",13,null],[13,"DstAlpha","","",13,null],[13,"OneMinusDstAlpha","","",13,null],[13,"SrcAlphaSaturated","","",13,null],[13,"BlendColor","","",13,null],[13,"OneMinusBlendColor","","",13,null],[4,"BlendOperation","","",null,null],[13,"Add","","",14,null],[13,"Subtract","","",14,null],[13,"ReverseSubtract","","",14,null],[13,"Min","","",14,null],[13,"Max","","",14,null],[6,"BufferAddress","","",null,null],[3,"BufferSize","","",null,null],[12,"0","","",15,null],[3,"BufferUsage","","",null,null],[3,"Capabilities","","",null,null],[3,"Color","","",null,null],[12,"r","","",16,null],[12,"g","","",16,null],[12,"b","","",16,null],[12,"a","","",16,null],[3,"ColorStateDescriptor","","",null,null],[12,"format","","",17,null],[12,"alpha_blend","","",17,null],[12,"color_blend","","",17,null],[12,"write_mask","","",17,null],[3,"ColorWrite","","",null,null],[3,"CommandBufferDescriptor","","",null,null],[12,"todo","","",18,null],[4,"CompareFunction","","",null,null],[13,"Undefined","","",19,null],[13,"Never","","",19,null],[13,"Less","","",19,null],[13,"Equal","","",19,null],[13,"LessEqual","","",19,null],[13,"Greater","","",19,null],[13,"NotEqual","","",19,null],[13,"GreaterEqual","","",19,null],[13,"Always","","",19,null],[4,"CullMode","","",null,null],[13,"None","","",20,null],[13,"Front","","",20,null],[13,"Back","","",20,null],[3,"DepthStencilStateDescriptor","","",null,null],[12,"format","","",21,null],[12,"depth_write_enabled","","",21,null],[12,"depth_compare","","",21,null],[12,"stencil_front","","",21,null],[12,"stencil_back","","",21,null],[12,"stencil_read_mask","","",21,null],[12,"stencil_write_mask","","",21,null],[3,"DeviceDescriptor","","",null,null],[12,"extensions","","",22,null],[12,"limits","","",22,null],[12,"shader_validation","","Switch shader validation on/off. This is a temporary field…",22,null],[6,"DynamicOffset","","",null,null],[3,"Extensions","","",null,null],[3,"Extent3d","","",null,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"depth","","",23,null],[4,"FilterMode","","",null,null],[13,"Nearest","","",24,null],[13,"Linear","","",24,null],[4,"FrontFace","","",null,null],[13,"Ccw","","",25,null],[13,"Cw","","",25,null],[4,"IndexFormat","","",null,null],[13,"Uint16","","",26,null],[13,"Uint32","","",26,null],[4,"InputStepMode","","",null,null],[13,"Vertex","","",27,null],[13,"Instance","","",27,null],[3,"Limits","","",null,null],[12,"max_bind_groups","","",28,null],[12,"_non_exhaustive","","",28,null],[4,"LoadOp","","",null,null],[13,"Clear","","",29,null],[13,"Load","","",29,null],[6,"NonZeroBufferAddress","","",null,null],[3,"Origin3d","","",null,null],[12,"x","","",30,null],[12,"y","","",30,null],[12,"z","","",30,null],[4,"PowerPreference","","",null,null],[13,"Default","","",31,null],[13,"LowPower","","",31,null],[13,"HighPerformance","","",31,null],[4,"PresentMode","","",null,null],[13,"Immediate","","The presentation engine does not wait for a vertical…",32,null],[13,"Mailbox","","The presentation engine waits for the next vertical…",32,null],[13,"Fifo","","The presentation engine waits for the next vertical…",32,null],[4,"PrimitiveTopology","","",null,null],[13,"PointList","","",33,null],[13,"LineList","","",33,null],[13,"LineStrip","","",33,null],[13,"TriangleList","","",33,null],[13,"TriangleStrip","","",33,null],[3,"RasterizationStateDescriptor","","",null,null],[12,"front_face","","",34,null],[12,"cull_mode","","",34,null],[12,"depth_bias","","",34,null],[12,"depth_bias_slope_scale","","",34,null],[12,"depth_bias_clamp","","",34,null],[3,"RenderBundleEncoderDescriptor","","",null,null],[12,"label","","",35,null],[12,"color_formats","","",35,null],[12,"depth_stencil_format","","",35,null],[12,"sample_count","","",35,null],[6,"ShaderLocation","","",null,null],[3,"ShaderStage","","",null,null],[4,"StencilOperation","","",null,null],[13,"Keep","","",36,null],[13,"Zero","","",36,null],[13,"Replace","","",36,null],[13,"Invert","","",36,null],[13,"IncrementClamp","","",36,null],[13,"DecrementClamp","","",36,null],[13,"IncrementWrap","","",36,null],[13,"DecrementWrap","","",36,null],[3,"StencilStateFaceDescriptor","","",null,null],[12,"compare","","",37,null],[12,"fail_op","","",37,null],[12,"depth_fail_op","","",37,null],[12,"pass_op","","",37,null],[4,"StoreOp","","",null,null],[13,"Clear","","",38,null],[13,"Store","","",38,null],[3,"SwapChainDescriptor","","",null,null],[12,"usage","","",39,null],[12,"format","","",39,null],[12,"width","","",39,null],[12,"height","","",39,null],[12,"present_mode","","",39,null],[4,"SwapChainStatus","","",null,null],[13,"Good","","",40,null],[13,"Suboptimal","","",40,null],[13,"Timeout","","",40,null],[13,"Outdated","","",40,null],[13,"Lost","","",40,null],[13,"OutOfMemory","","",40,null],[4,"TextureAspect","","",null,null],[13,"All","","",41,null],[13,"StencilOnly","","",41,null],[13,"DepthOnly","","",41,null],[4,"TextureComponentType","","",null,null],[13,"Float","","",42,null],[13,"Sint","","",42,null],[13,"Uint","","",42,null],[3,"TextureDataLayout","","",null,null],[12,"offset","","",43,null],[12,"bytes_per_row","","",43,null],[12,"rows_per_image","","",43,null],[4,"TextureDimension","","",null,null],[13,"D1","","",44,null],[13,"D2","","",44,null],[13,"D3","","",44,null],[4,"TextureFormat","","",null,null],[13,"R8Unorm","","",45,null],[13,"R8Snorm","","",45,null],[13,"R8Uint","","",45,null],[13,"R8Sint","","",45,null],[13,"R16Uint","","",45,null],[13,"R16Sint","","",45,null],[13,"R16Float","","",45,null],[13,"Rg8Unorm","","",45,null],[13,"Rg8Snorm","","",45,null],[13,"Rg8Uint","","",45,null],[13,"Rg8Sint","","",45,null],[13,"R32Uint","","",45,null],[13,"R32Sint","","",45,null],[13,"R32Float","","",45,null],[13,"Rg16Uint","","",45,null],[13,"Rg16Sint","","",45,null],[13,"Rg16Float","","",45,null],[13,"Rgba8Unorm","","",45,null],[13,"Rgba8UnormSrgb","","",45,null],[13,"Rgba8Snorm","","",45,null],[13,"Rgba8Uint","","",45,null],[13,"Rgba8Sint","","",45,null],[13,"Bgra8Unorm","","",45,null],[13,"Bgra8UnormSrgb","","",45,null],[13,"Rgb10a2Unorm","","",45,null],[13,"Rg11b10Float","","",45,null],[13,"Rg32Uint","","",45,null],[13,"Rg32Sint","","",45,null],[13,"Rg32Float","","",45,null],[13,"Rgba16Uint","","",45,null],[13,"Rgba16Sint","","",45,null],[13,"Rgba16Float","","",45,null],[13,"Rgba32Uint","","",45,null],[13,"Rgba32Sint","","",45,null],[13,"Rgba32Float","","",45,null],[13,"Depth32Float","","",45,null],[13,"Depth24Plus","","",45,null],[13,"Depth24PlusStencil8","","",45,null],[3,"TextureUsage","","",null,null],[4,"TextureViewDimension","","",null,null],[13,"D1","","",46,null],[13,"D2","","",46,null],[13,"D2Array","","",46,null],[13,"Cube","","",46,null],[13,"CubeArray","","",46,null],[13,"D3","","",46,null],[3,"UnsafeExtensions","","",null,null],[3,"VertexAttributeDescriptor","","",null,null],[12,"offset","","",47,null],[12,"format","","",47,null],[12,"shader_location","","",47,null],[4,"VertexFormat","","",null,null],[13,"Uchar2","","",48,null],[13,"Uchar4","","",48,null],[13,"Char2","","",48,null],[13,"Char4","","",48,null],[13,"Uchar2Norm","","",48,null],[13,"Uchar4Norm","","",48,null],[13,"Char2Norm","","",48,null],[13,"Char4Norm","","",48,null],[13,"Ushort2","","",48,null],[13,"Ushort4","","",48,null],[13,"Short2","","",48,null],[13,"Short4","","",48,null],[13,"Ushort2Norm","","",48,null],[13,"Ushort4Norm","","",48,null],[13,"Short2Norm","","",48,null],[13,"Short4Norm","","",48,null],[13,"Half2","","",48,null],[13,"Half4","","",48,null],[13,"Float","","",48,null],[13,"Float2","","",48,null],[13,"Float3","","",48,null],[13,"Float4","","",48,null],[13,"Uint","","",48,null],[13,"Uint2","","",48,null],[13,"Uint3","","",48,null],[13,"Uint4","","",48,null],[13,"Int","","",48,null],[13,"Int2","","",48,null],[13,"Int3","","",48,null],[13,"Int4","","",48,null],[17,"BIND_BUFFER_ALIGNMENT","","Bound uniform/storage buffer offsets must be aligned to…",null,null],[17,"COPY_BUFFER_ALIGNMENT","","Buffer to buffer copy offsets and sizes must be aligned to…",null,null],[17,"COPY_BYTES_PER_ROW_ALIGNMENT","","Buffer-Texture copies on command encoders have to have the…",null,null],[3,"RenderPassColorAttachmentDescriptorBase","","",null,null],[12,"attachment","","",49,null],[12,"resolve_target","","",49,null],[12,"load_op","","",49,null],[12,"store_op","","",49,null],[12,"clear_color","","",49,null],[3,"RenderPassDepthStencilAttachmentDescriptorBase","","",null,null],[12,"attachment","","",50,null],[12,"depth_load_op","","",50,null],[12,"depth_store_op","","",50,null],[12,"clear_depth","","",50,null],[12,"depth_read_only","","",50,null],[12,"stencil_load_op","","",50,null],[12,"stencil_store_op","","",50,null],[12,"clear_stencil","","",50,null],[12,"stencil_read_only","","",50,null],[3,"BufferDescriptorBase","","",null,null],[12,"label","","",51,null],[12,"size","","",51,null],[12,"usage","","",51,null],[12,"mapped_at_creation","","",51,null],[3,"CommandEncoderDescriptorBase","","",null,null],[12,"label","","",52,null],[3,"RenderBundleDescriptorBase","","",null,null],[12,"label","","",53,null],[3,"TextureDescriptorBase","","",null,null],[12,"label","","",54,null],[12,"size","","",54,null],[12,"mip_level_count","","",54,null],[12,"sample_count","","",54,null],[12,"dimension","","",54,null],[12,"format","","",54,null],[12,"usage","","",54,null],[3,"TextureViewDescriptorBase","","",null,null],[12,"label","","",55,null],[12,"format","","",55,null],[12,"dimension","","",55,null],[12,"aspect","","",55,null],[12,"base_mip_level","","",55,null],[12,"level_count","","",55,null],[12,"base_array_layer","","",55,null],[12,"array_layer_count","","",55,null],[3,"SamplerDescriptorBase","","",null,null],[12,"label","","",56,null],[12,"address_mode_u","","",56,null],[12,"address_mode_v","","",56,null],[12,"address_mode_w","","",56,null],[12,"mag_filter","","",56,null],[12,"min_filter","","",56,null],[12,"mipmap_filter","","",56,null],[12,"lod_min_clamp","","",56,null],[12,"lod_max_clamp","","",56,null],[12,"compare","","",56,null],[12,"anisotropy_clamp","","Anisotropic filtering extension must be enabled if this…",56,null],[12,"_non_exhaustive","","",56,null],[3,"Instance","","Instance of wgpu. First thing you create when using wgpu.",null,null],[3,"Adapter","","Handle to a physical graphics and/or compute device.",null,null],[3,"RequestAdapterOptions","","Options for requesting adapter.",null,null],[12,"power_preference","","Power preference for the adapter.",57,null],[12,"compatible_surface","","Surface that is required to be presentable with the…",57,null],[3,"Device","","Open connection to a graphics and/or compute device.",null,null],[3,"Buffer","","Handle to a GPU-accessible buffer.",null,null],[3,"BufferSlice","","Slice into a [`Buffer`].",null,null],[3,"Texture","","Handle to a texture on the GPU.",null,null],[3,"TextureView","","Handle to a texture view.",null,null],[3,"Sampler","","Handle to a sampler.",null,null],[3,"Surface","","Handle to a presentable surface.",null,null],[3,"SwapChain","","Handle to a swap chain.",null,null],[3,"BindGroupLayout","","Handle to a binding group layout.",null,null],[3,"BindGroup","","Handle to a binding group.",null,null],[3,"ShaderModule","","Handle to a compiled shader module.",null,null],[3,"PipelineLayout","","Handle to a pipeline layout.",null,null],[3,"RenderPipeline","","Handle to a rendering (graphics) pipeline.",null,null],[3,"ComputePipeline","","Handle to a compute pipeline.",null,null],[3,"CommandBuffer","","Handle to a command buffer on the GPU.",null,null],[3,"CommandEncoder","","Encodes a series of GPU operations.",null,null],[3,"RenderPass","","In-progress recording of a render pass.",null,null],[3,"ComputePass","","In-progress recording of a compute pass.",null,null],[3,"RenderBundleEncoder","","Encodes a series of GPU operations into a reusable \\\"render…",null,null],[3,"RenderBundle","","Pre-prepared reusable bundle of GPU operations.",null,null],[3,"Queue","","Handle to a command queue on a device.",null,null],[3,"Binding","","Bindable resource and the slot to bind it to.",null,null],[12,"binding","","Slot for which binding provides resource. Corresponds to…",58,null],[12,"resource","","Resource to attach to the binding",58,null],[3,"BindGroupDescriptor","","Describes a group of bindings and the resources to be bound.",null,null],[12,"layout","","The [`BindGroupLayout`] that corresponds to this bind group.",59,null],[12,"bindings","","The resources to bind to this bind group.",59,null],[12,"label","","Debug label of the bind group. This will show up in…",59,null],[3,"PipelineLayoutDescriptor","","Describes a pipeline layout.",null,null],[12,"bind_group_layouts","","Bind groups that this pipeline uses. The first entry will…",60,null],[3,"ProgrammableStageDescriptor","","Describes a programmable pipeline stage.",null,null],[12,"module","","The compiled shader module for this stage.",61,null],[12,"entry_point","","The name of the entry point in the compiled shader. There…",61,null],[3,"VertexStateDescriptor","","Describes vertex input state for a render pipeline.",null,null],[12,"index_format","","The format of any index buffers used with this pipeline.",62,null],[12,"vertex_buffers","","The format of any vertex buffers used with this pipeline.",62,null],[3,"VertexBufferDescriptor","","Describes how the vertex buffer is interpreted.",null,null],[12,"stride","","The stride, in bytes, between elements of this buffer.",63,null],[12,"step_mode","","How often this vertex buffer is \\\"stepped\\\" forward. Can be…",63,null],[12,"attributes","","The list of attributes which comprise a single vertex,…",63,null],[3,"RenderPipelineDescriptor","","Describes a render (graphics) pipeline.",null,null],[12,"layout","","The layout of bind groups for this pipeline.",64,null],[12,"vertex_stage","","The compiled vertex stage and its entry point.",64,null],[12,"fragment_stage","","The compiled fragment stage and its entry point, if any.",64,null],[12,"rasterization_state","","The rasterization process for this pipeline.",64,null],[12,"primitive_topology","","The primitive topology used to interpret vertices.",64,null],[12,"color_states","","The effect of draw calls on the color aspect of the output…",64,null],[12,"depth_stencil_state","","The effect of draw calls on the depth and stencil aspects…",64,null],[12,"vertex_state","","The vertex input state for this pipeline.",64,null],[12,"sample_count","","The number of samples calculated per pixel (for MSAA). For…",64,null],[12,"sample_mask","","Bitmask that restricts the samples of a pixel modified by…",64,null],[12,"alpha_to_coverage_enabled","","When enabled, produces another sample mask per pixel based…",64,null],[3,"ComputePipelineDescriptor","","Describes a compute pipeline.",null,null],[12,"layout","","The layout of bind groups for this pipeline.",65,null],[12,"compute_stage","","The compiled compute stage and its entry point.",65,null],[3,"RenderPassDescriptor","","Describes the attachments of a [`RenderPass`].",null,null],[12,"color_attachments","","The color attachments of the render pass.",66,null],[12,"depth_stencil_attachment","","The depth and stencil attachment of the render pass, if any.",66,null],[3,"SwapChainTexture","","Swap chain image that can be rendered to.",null,null],[12,"view","","",67,null],[3,"SwapChainFrame","","Result of a successful call to…",null,null],[12,"output","","",68,null],[12,"suboptimal","","",68,null],[3,"BufferCopyView","","View of a buffer which can be used to copy to/from a…",null,null],[12,"buffer","","The buffer to be copied to/from.",69,null],[12,"layout","","The layout of the texture data in this buffer.",69,null],[3,"TextureCopyView","","View of a texture which can be used to copy to/from a…",null,null],[12,"texture","","The texture to be copied to/from.",70,null],[12,"mip_level","","The target mip level of the texture.",70,null],[12,"origin","","The base texel of the texture in the selected `mip_level`.",70,null],[3,"RequestDeviceError","","Requesting a device failed.",null,null],[3,"BufferAsyncError","","Error occurred when trying to async map a number.",null,null],[3,"BufferView","","Read only view into a mapped buffer.",null,null],[3,"BufferViewMut","","Write only view into mapped buffer.",null,null],[4,"Maintain","","Passed to [`Device::poll`] to control if it should block…",null,null],[13,"Wait","","Block",71,null],[13,"Poll","","Don\'t block",71,null],[4,"ShaderModuleSource","","Source of a shader module.",null,null],[13,"SpirV","","SPIR-V module represented as a slice of words. wgpu-rs…",72,null],[13,"Wgsl","","WGSL module as a string slice. wgpu-rs will parse it and…",72,null],[4,"BindingResource","","Resource that can be bound to a pipeline.",null,null],[13,"Buffer","","Binding is backed by a buffer.",73,null],[13,"Sampler","","Binding is a sampler.",73,null],[13,"TextureView","","Binding is backed by a texture.",73,null],[13,"TextureViewArray","","Binding is backed by an array of textures.",73,null],[4,"SwapChainError","","Result of an unsuccessful call to…",null,null],[13,"Timeout","","",74,null],[13,"Outdated","","",74,null],[13,"Lost","","",74,null],[13,"OutOfMemory","","",74,null],[4,"MapMode","","Type of buffer mapping.",null,null],[13,"Read","","Map only for reading",75,null],[13,"Write","","Map only for writing",75,null],[0,"util","","",null,null],[3,"WordAligned","wgpu::util","Wrapper aligning contents to at least 4.",null,null],[12,"0","","",76,null],[5,"make_spirv","","Treat the given by slice as a SPIR-V module.",null,[[],["shadermodulesource",4]]],[6,"RenderPassColorAttachmentDescriptor","wgpu","Describes a color attachment to a [`RenderPass`].",null,null],[6,"RenderPassDepthStencilAttachmentDescriptor","","Describes a depth/stencil attachment to a [`RenderPass`].",null,null],[6,"BufferDescriptor","","Describes a [`Buffer`].",null,null],[6,"CommandEncoderDescriptor","","Describes a [`CommandEncoder`].",null,null],[6,"RenderBundleDescriptor","","Describes a [`RenderBundle`].",null,null],[6,"TextureDescriptor","","Describes a [`Texture`].",null,null],[6,"TextureViewDescriptor","","Describes a [`TextureView`].",null,null],[6,"SamplerDescriptor","","Describes a [`Sampler`].",null,null],[11,"new","","Create an new instance of wgpu.",77,[[]]],[11,"enumerate_adapters","","Retrieves all available [`Adapter`]s that match the given…",77,[[["unsafeextensions",3],["backendbit",3]]]],[11,"create_surface","","Creates a surface from a raw window handle.",77,[[],["surface",3]]],[11,"request_adapter","","Retrieves an [`Adapter`] which matches the given options.",77,[[["backendbit",3],["unsafeextensions",3],["requestadapteroptions",3]]]],[11,"request_device","","Requests a connection to a physical device, creating a…",78,[[["option",4],["devicedescriptor",3],["path",3]]]],[11,"extensions","","List all extensions that are supported with this adapter.",78,[[],["extensions",3]]],[11,"limits","","List the \\\"best\\\" limits that are supported by this adapter.",78,[[],["limits",3]]],[11,"capabilities","","List all capabilities that may be used wth this adapter.",78,[[],["capabilities",3]]],[11,"get_info","","Get info about the adapter itself.",78,[[],["adapterinfo",3]]],[11,"poll","","Check for resource cleanups and mapping callbacks.",79,[[["maintain",4]]]],[11,"extensions","","List all extensions that may be used with this device.",79,[[],["extensions",3]]],[11,"limits","","List all limits that were requested of this device.",79,[[],["limits",3]]],[11,"capabilities","","List all capabilities that may be used wth this device.",79,[[],["capabilities",3]]],[11,"create_shader_module","","Creates a shader module from either SPIR-V or WGSL source…",79,[[["shadermodulesource",4]],["shadermodule",3]]],[11,"create_command_encoder","","Creates an empty [`CommandEncoder`].",79,[[["commandencoderdescriptor",6]],["commandencoder",3]]],[11,"create_render_bundle_encoder","","Creates an empty [`RenderBundleEncoder`].",79,[[["renderbundleencoderdescriptor",3]],["renderbundleencoder",3]]],[11,"create_bind_group","","Creates a new [`BindGroup`].",79,[[["bindgroupdescriptor",3]],["bindgroup",3]]],[11,"create_bind_group_layout","","Creates a [`BindGroupLayout`].",79,[[["bindgrouplayoutdescriptor",3]],["bindgrouplayout",3]]],[11,"create_pipeline_layout","","Creates a [`PipelineLayout`].",79,[[["pipelinelayoutdescriptor",3]],["pipelinelayout",3]]],[11,"create_render_pipeline","","Creates a [`RenderPipeline`].",79,[[["renderpipelinedescriptor",3]],["renderpipeline",3]]],[11,"create_compute_pipeline","","Creates a [`ComputePipeline`].",79,[[["computepipelinedescriptor",3]],["computepipeline",3]]],[11,"create_buffer","","Creates a [`Buffer`].",79,[[["bufferdescriptor",6]],["buffer",3]]],[11,"create_buffer_with_data","","Creates a new buffer, maps it into host-visible memory,…",79,[[["bufferusage",3]],["buffer",3]]],[11,"create_texture","","Creates a new [`Texture`].",79,[[["texturedescriptor",6]],["texture",3]]],[11,"create_sampler","","Creates a new [`Sampler`].",79,[[["samplerdescriptor",6]],["sampler",3]]],[11,"create_swap_chain","","Create a new [`SwapChain`] which targets `surface`.",79,[[["surface",3],["swapchaindescriptor",3]],["swapchain",3]]],[11,"slice","","Use only a portion of this Buffer for a given operation.…",80,[[["bufferaddress",6],["rangebounds",8]],["bufferslice",3]]],[11,"unmap","","Flushes any pending write operations and unmaps the buffer…",80,[[]]],[11,"slice","","Use only a portion of this BufferSlice for a given…",81,[[["bufferaddress",6],["rangebounds",8]]]],[11,"map_async","","Map the buffer. Buffer is ready to map once the future is…",81,[[["mapmode",4]]]],[11,"get_mapped_range","","Synchronously and immediately map a buffer for reading. If…",81,[[],["bufferview",3]]],[11,"get_mapped_range_mut","","Synchronously and immediately map a buffer for writing. If…",81,[[],["bufferviewmut",3]]],[11,"create_view","","Creates a view of this texture.",82,[[["textureviewdescriptor",6]],["textureview",3]]],[11,"create_default_view","","Creates the default view of this whole texture. This is…",82,[[],["textureview",3]]],[11,"finish","","Finishes recording and returns a [`CommandBuffer`] that…",83,[[],["commandbuffer",3]]],[11,"begin_render_pass","","Begins recording of a render pass.",83,[[["renderpassdescriptor",3]],["renderpass",3]]],[11,"begin_compute_pass","","Begins recording of a compute pass.",83,[[],["computepass",3]]],[11,"copy_buffer_to_buffer","","Copy data from one buffer to another.",83,[[["buffer",3],["bufferaddress",6]]]],[11,"copy_buffer_to_texture","","Copy data from a buffer to a texture.",83,[[["buffercopyview",3],["texturecopyview",3],["extent3d",3]]]],[11,"copy_texture_to_buffer","","Copy data from a texture to a buffer.",83,[[["buffercopyview",3],["texturecopyview",3],["extent3d",3]]]],[11,"copy_texture_to_texture","","Copy data from one texture to another.",83,[[["texturecopyview",3],["extent3d",3]]]],[11,"set_bind_group","","Sets the active bind group for a given bind group index.…",84,[[["bindgroup",3]]]],[11,"set_pipeline","","Sets the active render pipeline.",84,[[["renderpipeline",3]]]],[11,"set_blend_color","","Sets the blend color as used by some of the blending modes.",84,[[["color",3]]]],[11,"set_index_buffer","","Sets the active index buffer.",84,[[["bufferslice",3]]]],[11,"set_vertex_buffer","","Assign a vertex buffer to a slot.",84,[[["bufferslice",3]]]],[11,"set_scissor_rect","","Sets the scissor region.",84,[[]]],[11,"set_viewport","","Sets the viewport region.",84,[[]]],[11,"set_stencil_reference","","Sets the stencil reference.",84,[[]]],[11,"draw","","Draws primitives from the active vertex buffer(s).",84,[[["range",3]]]],[11,"insert_debug_marker","","Inserts debug marker.",84,[[]]],[11,"push_debug_group","","Start record commands and group it into debug marker group.",84,[[]]],[11,"pop_debug_group","","Stops command recording and creates debug group.",84,[[]]],[11,"draw_indexed","","Draws indexed primitives using the active index buffer and…",84,[[["range",3]]]],[11,"draw_indirect","","Draws primitives from the active vertex buffer(s) based on…",84,[[["bufferaddress",6],["buffer",3]]]],[11,"draw_indexed_indirect","","Draws indexed primitives using the active index buffer and…",84,[[["bufferaddress",6],["buffer",3]]]],[11,"execute_bundles","","",84,[[["iterator",8]]]],[11,"set_bind_group","","Sets the active bind group for a given bind group index.…",85,[[["bindgroup",3]]]],[11,"set_pipeline","","Sets the active compute pipeline.",85,[[["computepipeline",3]]]],[11,"dispatch","","Dispatches compute work operations.",85,[[]]],[11,"dispatch_indirect","","Dispatches compute work operations, based on the contents…",85,[[["bufferaddress",6],["buffer",3]]]],[11,"finish","","Finishes recording and returns a [`RenderBundle`] that can…",86,[[["renderbundledescriptor",6]],["renderbundle",3]]],[11,"set_bind_group","","Sets the active bind group for a given bind group index.…",86,[[["bindgroup",3]]]],[11,"set_pipeline","","Sets the active render pipeline.",86,[[["renderpipeline",3]]]],[11,"set_index_buffer","","Sets the active index buffer.",86,[[["bufferslice",3]]]],[11,"set_vertex_buffer","","Assign a vertex buffer to a slot.",86,[[["bufferslice",3]]]],[11,"draw","","Draws primitives from the active vertex buffer(s).",86,[[["range",3]]]],[11,"draw_indexed","","Draws indexed primitives using the active index buffer and…",86,[[["range",3]]]],[11,"draw_indirect","","Draws primitives from the active vertex buffer(s) based on…",86,[[["bufferaddress",6],["buffer",3]]]],[11,"draw_indexed_indirect","","Draws indexed primitives using the active index buffer and…",86,[[["bufferaddress",6],["buffer",3]]]],[11,"write_buffer","","Schedule a data write into `buffer` starting at `offset`.",87,[[["buffer",3],["bufferaddress",6]]]],[11,"write_texture","","Schedule a data write into `texture`.",87,[[["extent3d",3],["texturecopyview",3],["texturedatalayout",3]]]],[11,"submit","","Submits a series of finished command buffers for execution.",87,[[["intoiterator",8]]]],[11,"get_next_frame","","Returns the next texture to be presented by the swapchain…",88,[[],[["result",4],["swapchainframe",3],["swapchainerror",4]]]],[14,"vertex_attr_array","","Macro to produce an array of [`VertexAttributeDescriptor`].",null,null],[14,"vertex_format_size","","Helper macro which turns a vertex attribute type into a…",null,null],[14,"include_spirv","","Macro to load a SPIR-V module statically.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","wgpu::util","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"serialize","wgpu","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"from","","",1,[[["devicetype",4]],["devicetype",4]]],[11,"eq","","",0,[[["adapterinfo",3]]]],[11,"ne","","",0,[[["adapterinfo",3]]]],[11,"eq","","",1,[[["devicetype",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["adapterinfo",3]]],[11,"clone","","",1,[[],["devicetype",4]]],[11,"not","","Returns the complement of this set of flags.",89,[[],["backendbit",3]]],[11,"not","","Returns the complement of this set of flags.",95,[[],["textureusage",3]]],[11,"not","","Returns the complement of this set of flags.",90,[[],["bufferusage",3]]],[11,"not","","Returns the complement of this set of flags.",93,[[],["extensions",3]]],[11,"not","","Returns the complement of this set of flags.",91,[[],["capabilities",3]]],[11,"not","","Returns the complement of this set of flags.",92,[[],["colorwrite",3]]],[11,"not","","Returns the complement of this set of flags.",94,[[],["shaderstage",3]]],[11,"extend","","",95,[[]]],[11,"extend","","",91,[[]]],[11,"extend","","",94,[[]]],[11,"extend","","",92,[[]]],[11,"extend","","",93,[[]]],[11,"extend","","",90,[[]]],[11,"extend","","",89,[[]]],[11,"cmp","","",94,[[["shaderstage",3]],["ordering",4]]],[11,"cmp","","",91,[[["capabilities",3]],["ordering",4]]],[11,"cmp","","",93,[[["extensions",3]],["ordering",4]]],[11,"cmp","","",95,[[["textureusage",3]],["ordering",4]]],[11,"cmp","","",89,[[["backendbit",3]],["ordering",4]]],[11,"cmp","","",92,[[["colorwrite",3]],["ordering",4]]],[11,"cmp","","",90,[[["bufferusage",3]],["ordering",4]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",94,[[["shaderstage",3]],["shaderstage",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",93,[[["extensions",3]],["extensions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",91,[[["capabilities",3]],["capabilities",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",90,[[["bufferusage",3]],["bufferusage",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",92,[[["colorwrite",3]],["colorwrite",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",89,[[["backendbit",3]],["backendbit",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",95,[[["textureusage",3]],["textureusage",3]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",92,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",94,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",93,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"hash","","",13,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",17,[[]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",90,[[["bufferusage",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",94,[[["shaderstage",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["backendbit",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["colorwrite",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",91,[[["capabilities",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",95,[[["textureusage",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",93,[[["extensions",3]]]],[11,"partial_cmp","","",90,[[["bufferusage",3]],[["ordering",4],["option",4]]]],[11,"lt","","",90,[[["bufferusage",3]]]],[11,"le","","",90,[[["bufferusage",3]]]],[11,"gt","","",90,[[["bufferusage",3]]]],[11,"ge","","",90,[[["bufferusage",3]]]],[11,"partial_cmp","","",95,[[["textureusage",3]],[["ordering",4],["option",4]]]],[11,"lt","","",95,[[["textureusage",3]]]],[11,"le","","",95,[[["textureusage",3]]]],[11,"gt","","",95,[[["textureusage",3]]]],[11,"ge","","",95,[[["textureusage",3]]]],[11,"partial_cmp","","",94,[[["shaderstage",3]],[["ordering",4],["option",4]]]],[11,"lt","","",94,[[["shaderstage",3]]]],[11,"le","","",94,[[["shaderstage",3]]]],[11,"gt","","",94,[[["shaderstage",3]]]],[11,"ge","","",94,[[["shaderstage",3]]]],[11,"partial_cmp","","",92,[[["colorwrite",3]],[["ordering",4],["option",4]]]],[11,"lt","","",92,[[["colorwrite",3]]]],[11,"le","","",92,[[["colorwrite",3]]]],[11,"gt","","",92,[[["colorwrite",3]]]],[11,"ge","","",92,[[["colorwrite",3]]]],[11,"partial_cmp","","",89,[[["backendbit",3]],[["ordering",4],["option",4]]]],[11,"lt","","",89,[[["backendbit",3]]]],[11,"le","","",89,[[["backendbit",3]]]],[11,"gt","","",89,[[["backendbit",3]]]],[11,"ge","","",89,[[["backendbit",3]]]],[11,"partial_cmp","","",91,[[["capabilities",3]],[["ordering",4],["option",4]]]],[11,"lt","","",91,[[["capabilities",3]]]],[11,"le","","",91,[[["capabilities",3]]]],[11,"gt","","",91,[[["capabilities",3]]]],[11,"ge","","",91,[[["capabilities",3]]]],[11,"partial_cmp","","",93,[[["extensions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",93,[[["extensions",3]]]],[11,"le","","",93,[[["extensions",3]]]],[11,"gt","","",93,[[["extensions",3]]]],[11,"ge","","",93,[[["extensions",3]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_iter","","",93,[[],["extensions",3]]],[11,"from_iter","","",90,[[],["bufferusage",3]]],[11,"from_iter","","",91,[[],["capabilities",3]]],[11,"from_iter","","",89,[[],["backendbit",3]]],[11,"from_iter","","",95,[[],["textureusage",3]]],[11,"from_iter","","",94,[[],["shaderstage",3]]],[11,"from_iter","","",92,[[],["colorwrite",3]]],[11,"bitor","","Returns the union of the two sets of flags.",95,[[["textureusage",3]],["textureusage",3]]],[11,"bitor","","Returns the union of the two sets of flags.",94,[[["shaderstage",3]],["shaderstage",3]]],[11,"bitor","","Returns the union of the two sets of flags.",91,[[["capabilities",3]],["capabilities",3]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["backendbit",3]],["backendbit",3]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["colorwrite",3]],["colorwrite",3]]],[11,"bitor","","Returns the union of the two sets of flags.",93,[[["extensions",3]],["extensions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",90,[[["bufferusage",3]],["bufferusage",3]]],[11,"from","","",42,[[["textureformat",4]],["texturecomponenttype",4]]],[11,"from","","",89,[[["backend",4]],["backendbit",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["backendbit",3]],["backendbit",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",91,[[["capabilities",3]],["capabilities",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",90,[[["bufferusage",3]],["bufferusage",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",93,[[["extensions",3]],["extensions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",94,[[["shaderstage",3]],["shaderstage",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["colorwrite",3]],["colorwrite",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",95,[[["textureusage",3]],["textureusage",3]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"peek_from","","",16,[[]]],[11,"peek_from","","",49,[[]]],[11,"peek_from","","",50,[[]]],[11,"peek_from","","",15,[[]]],[11,"peek_from","","",38,[[]]],[11,"peek_from","","",29,[[]]],[11,"max_size","","",15,[[]]],[11,"poke_into","","",15,[[]]],[11,"max_size","","",38,[[]]],[11,"poke_into","","",38,[[]]],[11,"max_size","","",16,[[]]],[11,"poke_into","","",16,[[]]],[11,"max_size","","",49,[[]]],[11,"poke_into","","",49,[[]]],[11,"max_size","","",29,[[]]],[11,"poke_into","","",29,[[]]],[11,"max_size","","",50,[[]]],[11,"poke_into","","",50,[[]]],[11,"eq","","",33,[[["primitivetopology",4]]]],[11,"eq","","",44,[[["texturedimension",4]]]],[11,"eq","","",96,[[["unsafeextensions",3]]]],[11,"ne","","",96,[[["unsafeextensions",3]]]],[11,"eq","","",48,[[["vertexformat",4]]]],[11,"eq","","",13,[[["blendfactor",4]]]],[11,"eq","","",18,[[["commandbufferdescriptor",3]]]],[11,"ne","","",18,[[["commandbufferdescriptor",3]]]],[11,"eq","","",29,[[["loadop",4]]]],[11,"eq","","",6,[[["bindingtype",4]]]],[11,"ne","","",6,[[["bindingtype",4]]]],[11,"eq","","",2,[[["addressmode",4]]]],[11,"eq","","",47,[[["vertexattributedescriptor",3]]]],[11,"ne","","",47,[[["vertexattributedescriptor",3]]]],[11,"eq","","",20,[[["cullmode",4]]]],[11,"eq","","",45,[[["textureformat",4]]]],[11,"eq","","",23,[[["extent3d",3]]]],[11,"ne","","",23,[[["extent3d",3]]]],[11,"eq","","",31,[[["powerpreference",4]]]],[11,"eq","","",35,[[["renderbundleencoderdescriptor",3]]]],[11,"ne","","",35,[[["renderbundleencoderdescriptor",3]]]],[11,"eq","","",15,[[["buffersize",3]]]],[11,"ne","","",15,[[["buffersize",3]]]],[11,"eq","","",91,[[["capabilities",3]]]],[11,"ne","","",91,[[["capabilities",3]]]],[11,"eq","","",36,[[["stenciloperation",4]]]],[11,"eq","","",37,[[["stencilstatefacedescriptor",3]]]],[11,"ne","","",37,[[["stencilstatefacedescriptor",3]]]],[11,"eq","","",94,[[["shaderstage",3]]]],[11,"ne","","",94,[[["shaderstage",3]]]],[11,"eq","","",16,[[["color",3]]]],[11,"ne","","",16,[[["color",3]]]],[11,"eq","","",25,[[["frontface",4]]]],[11,"eq","","",26,[[["indexformat",4]]]],[11,"eq","","",52,[[["commandencoderdescriptor",3]]]],[11,"ne","","",52,[[["commandencoderdescriptor",3]]]],[11,"eq","","",17,[[["colorstatedescriptor",3]]]],[11,"ne","","",17,[[["colorstatedescriptor",3]]]],[11,"eq","","",12,[[["blenddescriptor",3]]]],[11,"ne","","",12,[[["blenddescriptor",3]]]],[11,"eq","","",92,[[["colorwrite",3]]]],[11,"ne","","",92,[[["colorwrite",3]]]],[11,"eq","","",27,[[["inputstepmode",4]]]],[11,"eq","","",90,[[["bufferusage",3]]]],[11,"ne","","",90,[[["bufferusage",3]]]],[11,"eq","","",51,[[["bufferdescriptor",3]]]],[11,"ne","","",51,[[["bufferdescriptor",3]]]],[11,"eq","","",5,[[["bindgrouplayoutentry",3]]]],[11,"ne","","",5,[[["bindgrouplayoutentry",3]]]],[11,"eq","","",19,[[["comparefunction",4]]]],[11,"eq","","",24,[[["filtermode",4]]]],[11,"eq","","",42,[[["texturecomponenttype",4]]]],[11,"eq","","",30,[[["origin3d",3]]]],[11,"ne","","",30,[[["origin3d",3]]]],[11,"eq","","",95,[[["textureusage",3]]]],[11,"ne","","",95,[[["textureusage",3]]]],[11,"eq","","",34,[[["rasterizationstatedescriptor",3]]]],[11,"ne","","",34,[[["rasterizationstatedescriptor",3]]]],[11,"eq","","",89,[[["backendbit",3]]]],[11,"ne","","",89,[[["backendbit",3]]]],[11,"eq","","",28,[[["limits",3]]]],[11,"ne","","",28,[[["limits",3]]]],[11,"eq","","",93,[[["extensions",3]]]],[11,"ne","","",93,[[["extensions",3]]]],[11,"eq","","",32,[[["presentmode",4]]]],[11,"eq","","",46,[[["textureviewdimension",4]]]],[11,"eq","","",41,[[["textureaspect",4]]]],[11,"eq","","",21,[[["depthstencilstatedescriptor",3]]]],[11,"ne","","",21,[[["depthstencilstatedescriptor",3]]]],[11,"eq","","",55,[[["textureviewdescriptor",3]]]],[11,"ne","","",55,[[["textureviewdescriptor",3]]]],[11,"eq","","",53,[[["renderbundledescriptor",3]]]],[11,"ne","","",53,[[["renderbundledescriptor",3]]]],[11,"eq","","",39,[[["swapchaindescriptor",3]]]],[11,"ne","","",39,[[["swapchaindescriptor",3]]]],[11,"eq","","",14,[[["blendoperation",4]]]],[11,"eq","","",56,[[["samplerdescriptor",3]]]],[11,"ne","","",56,[[["samplerdescriptor",3]]]],[11,"eq","","",54,[[["texturedescriptor",3]]]],[11,"ne","","",54,[[["texturedescriptor",3]]]],[11,"eq","","",38,[[["storeop",4]]]],[11,"eq","","",3,[[["backend",4]]]],[11,"default","","",12,[[],["blenddescriptor",3]]],[11,"default","","",92,[[],["colorwrite",3]]],[11,"default","","",15,[[],["buffersize",3]]],[11,"default","","",2,[[],["addressmode",4]]],[11,"default","","",96,[[],["unsafeextensions",3]]],[11,"default","","",35,[[],["renderbundleencoderdescriptor",3]]],[11,"default","","",53,[[],["renderbundledescriptor",3]]],[11,"default","","",30,[[],["origin3d",3]]],[11,"default","","",24,[[],["filtermode",4]]],[11,"default","","",16,[[],["color",3]]],[11,"default","","",25,[[],["frontface",4]]],[11,"default","","",91,[[],["capabilities",3]]],[11,"default","","",34,[[],["rasterizationstatedescriptor",3]]],[11,"default","","",28,[[],["limits",3]]],[11,"default","","",14,[[],["blendoperation",4]]],[11,"default","","",52,[[],["commandencoderdescriptor",3]]],[11,"default","","",22,[[],["devicedescriptor",3]]],[11,"default","","",56,[[],["samplerdescriptor",3]]],[11,"default","","",36,[[],["stenciloperation",4]]],[11,"default","","",20,[[],["cullmode",4]]],[11,"default","","",26,[[],["indexformat",4]]],[11,"default","","",31,[[],["powerpreference",4]]],[11,"default","","",18,[[],["commandbufferdescriptor",3]]],[11,"default","","",37,[[],["stencilstatefacedescriptor",3]]],[11,"default","","",41,[[],["textureaspect",4]]],[11,"default","","",93,[[],["extensions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["colorwrite",3]],["colorwrite",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",93,[[["extensions",3]],["extensions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",94,[[["shaderstage",3]],["shaderstage",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",95,[[["textureusage",3]],["textureusage",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",91,[[["capabilities",3]],["capabilities",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["backendbit",3]],["backendbit",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",90,[[["bufferusage",3]],["bufferusage",3]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["backendbit",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",90,[[["bufferusage",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",95,[[["textureusage",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["colorwrite",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",94,[[["shaderstage",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",93,[[["extensions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",91,[[["capabilities",3]]]],[11,"clone","","",17,[[],["colorstatedescriptor",3]]],[11,"clone","","",13,[[],["blendfactor",4]]],[11,"clone","","",22,[[],["devicedescriptor",3]]],[11,"clone","","",94,[[],["shaderstage",3]]],[11,"clone","","",4,[[],["bindgrouplayoutdescriptor",3]]],[11,"clone","","",3,[[],["backend",4]]],[11,"clone","","",38,[[],["storeop",4]]],[11,"clone","","",92,[[],["colorwrite",3]]],[11,"clone","","",20,[[],["cullmode",4]]],[11,"clone","","",5,[[],["bindgrouplayoutentry",3]]],[11,"clone","","",29,[[],["loadop",4]]],[11,"clone","","",39,[[],["swapchaindescriptor",3]]],[11,"clone","","",49,[[],["renderpasscolorattachmentdescriptorbase",3]]],[11,"clone","","",19,[[],["comparefunction",4]]],[11,"clone","","",37,[[],["stencilstatefacedescriptor",3]]],[11,"clone","","",35,[[],["renderbundleencoderdescriptor",3]]],[11,"clone","","",16,[[],["color",3]]],[11,"clone","","",56,[[],["samplerdescriptor",3]]],[11,"clone","","",26,[[],["indexformat",4]]],[11,"clone","","",44,[[],["texturedimension",4]]],[11,"clone","","",93,[[],["extensions",3]]],[11,"clone","","",47,[[],["vertexattributedescriptor",3]]],[11,"clone","","",50,[[],["renderpassdepthstencilattachmentdescriptorbase",3]]],[11,"clone","","",25,[[],["frontface",4]]],[11,"clone","","",24,[[],["filtermode",4]]],[11,"clone","","",91,[[],["capabilities",3]]],[11,"clone","","",95,[[],["textureusage",3]]],[11,"clone","","",30,[[],["origin3d",3]]],[11,"clone","","",34,[[],["rasterizationstatedescriptor",3]]],[11,"clone","","",43,[[],["texturedatalayout",3]]],[11,"clone","","",52,[[],["commandencoderdescriptor",3]]],[11,"clone","","",2,[[],["addressmode",4]]],[11,"clone","","",18,[[],["commandbufferdescriptor",3]]],[11,"clone","","",51,[[],["bufferdescriptor",3]]],[11,"clone","","",33,[[],["primitivetopology",4]]],[11,"clone","","",21,[[],["depthstencilstatedescriptor",3]]],[11,"clone","","",6,[[],["bindingtype",4]]],[11,"clone","","",41,[[],["textureaspect",4]]],[11,"clone","","",54,[[],["texturedescriptor",3]]],[11,"clone","","",90,[[],["bufferusage",3]]],[11,"clone","","",53,[[],["renderbundledescriptor",3]]],[11,"clone","","",89,[[],["backendbit",3]]],[11,"clone","","",27,[[],["inputstepmode",4]]],[11,"clone","","",42,[[],["texturecomponenttype",4]]],[11,"clone","","",36,[[],["stenciloperation",4]]],[11,"clone","","",28,[[],["limits",3]]],[11,"clone","","",46,[[],["textureviewdimension",4]]],[11,"clone","","",55,[[],["textureviewdescriptor",3]]],[11,"clone","","",48,[[],["vertexformat",4]]],[11,"clone","","",32,[[],["presentmode",4]]],[11,"clone","","",96,[[],["unsafeextensions",3]]],[11,"clone","","",15,[[],["buffersize",3]]],[11,"clone","","",12,[[],["blenddescriptor",3]]],[11,"clone","","",31,[[],["powerpreference",4]]],[11,"clone","","",45,[[],["textureformat",4]]],[11,"clone","","",14,[[],["blendoperation",4]]],[11,"clone","","",23,[[],["extent3d",3]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["colorwrite",3]]]],[11,"bitor_assign","","Adds the set of flags.",93,[[["extensions",3]]]],[11,"bitor_assign","","Adds the set of flags.",91,[[["capabilities",3]]]],[11,"bitor_assign","","Adds the set of flags.",95,[[["textureusage",3]]]],[11,"bitor_assign","","Adds the set of flags.",94,[[["shaderstage",3]]]],[11,"bitor_assign","","Adds the set of flags.",90,[[["bufferusage",3]]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["backendbit",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",91,[[["capabilities",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",93,[[["extensions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["backendbit",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["colorwrite",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",90,[[["bufferusage",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",95,[[["textureusage",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",94,[[["shaderstage",3]]]],[11,"drop","","",98,[[]]],[11,"drop","","",100,[[]]],[11,"drop","","",101,[[]]],[11,"drop","","",102,[[]]],[11,"drop","","",103,[[]]],[11,"drop","","",104,[[]]],[11,"drop","","",105,[[]]],[11,"drop","","",106,[[]]],[11,"drop","","",107,[[]]],[11,"drop","","",79,[[]]],[11,"drop","","",110,[[]]],[11,"drop","","",111,[[]]],[11,"drop","","",80,[[]]],[11,"drop","","",82,[[]]],[11,"drop","","",97,[[]]],[11,"drop","","",84,[[]]],[11,"drop","","",85,[[]]],[11,"drop","","",67,[[]]],[11,"clone","","",57,[[],["requestadapteroptions",3]]],[11,"clone","","",71,[[],["maintain",4]]],[11,"clone","","",81,[[],["bufferslice",3]]],[11,"clone","","",59,[[],["bindgroupdescriptor",3]]],[11,"clone","","",60,[[],["pipelinelayoutdescriptor",3]]],[11,"clone","","",61,[[],["programmablestagedescriptor",3]]],[11,"clone","","",62,[[],["vertexstatedescriptor",3]]],[11,"clone","","",63,[[],["vertexbufferdescriptor",3]]],[11,"clone","","",64,[[],["renderpipelinedescriptor",3]]],[11,"clone","","",65,[[],["computepipelinedescriptor",3]]],[11,"clone","","",69,[[],["buffercopyview",3]]],[11,"clone","","",70,[[],["texturecopyview",3]]],[11,"clone","","",108,[[],["requestdeviceerror",3]]],[11,"clone","","",109,[[],["bufferasyncerror",3]]],[11,"clone","","",75,[[],["mapmode",4]]],[11,"eq","","",71,[[["maintain",4]]]],[11,"eq","","",108,[[["requestdeviceerror",3]]]],[11,"eq","","",109,[[["bufferasyncerror",3]]]],[11,"eq","","",75,[[["mapmode",4]]]],[11,"deref","","",110,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[18,"VULKAN","","",89,null],[18,"GL","","",89,null],[18,"METAL","","",89,null],[18,"DX12","","",89,null],[18,"DX11","","",89,null],[18,"BROWSER_WEBGPU","","",89,null],[18,"PRIMARY","","Vulkan + Metal + DX12 + Browser WebGPU",89,null],[18,"SECONDARY","","OpenGL + DX11",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["backendbit",3]]],[11,"all","","Returns the set containing all flags.",89,[[],["backendbit",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",89,[[],[["option",4],["backendbit",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",89,[[],["backendbit",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[],["backendbit",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",89,[[["backendbit",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",89,[[["backendbit",3]]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["backendbit",3]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["backendbit",3]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["backendbit",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",89,[[["backendbit",3]]]],[11,"new","","",5,[[["shaderstage",3],["bindingtype",4]],["bindgrouplayoutentry",3]]],[11,"has_dynamic_offset","","",5,[[]]],[18,"REPLACE","","",12,null],[11,"uses_color","","",12,[[]]],[18,"WHOLE","","",15,null],[18,"MAP_READ","","",90,null],[18,"MAP_WRITE","","",90,null],[18,"COPY_SRC","","",90,null],[18,"COPY_DST","","",90,null],[18,"INDEX","","",90,null],[18,"VERTEX","","",90,null],[18,"UNIFORM","","",90,null],[18,"STORAGE","","",90,null],[18,"INDIRECT","","",90,null],[11,"empty","","Returns an empty set of flags",90,[[],["bufferusage",3]]],[11,"all","","Returns the set containing all flags.",90,[[],["bufferusage",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",90,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",90,[[],[["bufferusage",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",90,[[],["bufferusage",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",90,[[],["bufferusage",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",90,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",90,[[["bufferusage",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",90,[[["bufferusage",3]]]],[11,"insert","","Inserts the specified flags in-place.",90,[[["bufferusage",3]]]],[11,"remove","","Removes the specified flags in-place.",90,[[["bufferusage",3]]]],[11,"toggle","","Toggles the specified flags in-place.",90,[[["bufferusage",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",90,[[["bufferusage",3]]]],[18,"SAMPLED_TEXTURE_BINDING_ARRAY","","Allows the user to create uniform arrays of sampled…",91,null],[18,"SAMPLED_TEXTURE_ARRAY_DYNAMIC_INDEXING","","Allows shaders to index sampled texture arrays with…",91,null],[18,"SAMPLED_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","","Allows shaders to index sampled texture arrays with…",91,null],[18,"UNSIZED_BINDING_ARRAY","","Allows the user to create unsized uniform arrays of…",91,null],[18,"ALL_BUILT_IN","","All capabilities that are not provided by an extension",91,null],[18,"ALL_BINDING_INDEXING","","All capabilities that are provided by the BINDING_INDEXING…",91,null],[11,"empty","","Returns an empty set of flags",91,[[],["capabilities",3]]],[11,"all","","Returns the set containing all flags.",91,[[],["capabilities",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",91,[[],[["capabilities",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",91,[[],["capabilities",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",91,[[],["capabilities",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",91,[[["capabilities",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",91,[[["capabilities",3]]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["capabilities",3]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["capabilities",3]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["capabilities",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",91,[[["capabilities",3]]]],[18,"TRANSPARENT","","",16,null],[18,"BLACK","","",16,null],[18,"WHITE","","",16,null],[18,"RED","","",16,null],[18,"GREEN","","",16,null],[18,"BLUE","","",16,null],[18,"RED","","",92,null],[18,"GREEN","","",92,null],[18,"BLUE","","",92,null],[18,"ALPHA","","",92,null],[18,"COLOR","","",92,null],[18,"ALL","","",92,null],[11,"empty","","Returns an empty set of flags",92,[[],["colorwrite",3]]],[11,"all","","Returns the set containing all flags.",92,[[],["colorwrite",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[],[["colorwrite",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[],["colorwrite",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",92,[[],["colorwrite",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["colorwrite",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["colorwrite",3]]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["colorwrite",3]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["colorwrite",3]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["colorwrite",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["colorwrite",3]]]],[11,"is_trivial","","",19,[[]]],[11,"needs_stencil_reference","","",21,[[]]],[11,"is_read_only","","",21,[[]]],[18,"ANISOTROPIC_FILTERING","","Allow anisotropic filtering in samplers.",93,null],[18,"MAPPABLE_PRIMARY_BUFFERS","","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage…",93,null],[18,"BINDING_INDEXING","","Allows shaders to index arrays of bindings with…",93,null],[18,"ALL_WEBGPU","","Extensions which are part of the upstream webgpu standard",93,null],[18,"ALL_UNSAFE","","Extensions that require activating the unsafe extension flag",93,null],[18,"ALL_NATIVE","","Extensions that are only available when targeting native…",93,null],[11,"empty","","Returns an empty set of flags",93,[[],["extensions",3]]],[11,"all","","Returns the set containing all flags.",93,[[],["extensions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",93,[[],[["option",4],["extensions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",93,[[],["extensions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",93,[[],["extensions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",93,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",93,[[["extensions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",93,[[["extensions",3]]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["extensions",3]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["extensions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["extensions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",93,[[["extensions",3]]]],[18,"ZERO","","",30,null],[18,"NONE","","",94,null],[18,"VERTEX","","",94,null],[18,"FRAGMENT","","",94,null],[18,"COMPUTE","","",94,null],[11,"empty","","Returns an empty set of flags",94,[[],["shaderstage",3]]],[11,"all","","Returns the set containing all flags.",94,[[],["shaderstage",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",94,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",94,[[],[["option",4],["shaderstage",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",94,[[],["shaderstage",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",94,[[],["shaderstage",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",94,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",94,[[["shaderstage",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",94,[[["shaderstage",3]]]],[11,"insert","","Inserts the specified flags in-place.",94,[[["shaderstage",3]]]],[11,"remove","","Removes the specified flags in-place.",94,[[["shaderstage",3]]]],[11,"toggle","","Toggles the specified flags in-place.",94,[[["shaderstage",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",94,[[["shaderstage",3]]]],[18,"IGNORE","","",37,null],[18,"COPY_SRC","","",95,null],[18,"COPY_DST","","",95,null],[18,"SAMPLED","","",95,null],[18,"STORAGE","","",95,null],[18,"OUTPUT_ATTACHMENT","","",95,null],[11,"empty","","Returns an empty set of flags",95,[[],["textureusage",3]]],[11,"all","","Returns the set containing all flags.",95,[[],["textureusage",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",95,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",95,[[],[["option",4],["textureusage",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",95,[[],["textureusage",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",95,[[],["textureusage",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",95,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",95,[[["textureusage",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",95,[[["textureusage",3]]]],[11,"insert","","Inserts the specified flags in-place.",95,[[["textureusage",3]]]],[11,"remove","","Removes the specified flags in-place.",95,[[["textureusage",3]]]],[11,"toggle","","Toggles the specified flags in-place.",95,[[["textureusage",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",95,[[["textureusage",3]]]],[11,"allow","","",96,[[],["unsafeextensions",3]]],[11,"disallow","","",96,[[],["unsafeextensions",3]]],[11,"allowed","","",96,[[]]],[11,"map_label","","",51,[[],["bufferdescriptor",3]]],[11,"map_label","","",52,[[],["commandencoderdescriptor",3]]],[11,"map_label","","",53,[[],["renderbundledescriptor",3]]],[11,"map_label","","",54,[[],["texturedescriptor",3]]],[11,"map_label","","",55,[[],["textureviewdescriptor",3]]],[11,"map_label","","",56,[[],["samplerdescriptor",3]]]],"p":[[3,"AdapterInfo"],[4,"DeviceType"],[4,"AddressMode"],[4,"Backend"],[3,"BindGroupLayoutDescriptor"],[3,"BindGroupLayoutEntry"],[4,"BindingType"],[13,"UniformBuffer"],[13,"StorageBuffer"],[13,"Sampler"],[13,"SampledTexture"],[13,"StorageTexture"],[3,"BlendDescriptor"],[4,"BlendFactor"],[4,"BlendOperation"],[3,"BufferSize"],[3,"Color"],[3,"ColorStateDescriptor"],[3,"CommandBufferDescriptor"],[4,"CompareFunction"],[4,"CullMode"],[3,"DepthStencilStateDescriptor"],[3,"DeviceDescriptor"],[3,"Extent3d"],[4,"FilterMode"],[4,"FrontFace"],[4,"IndexFormat"],[4,"InputStepMode"],[3,"Limits"],[4,"LoadOp"],[3,"Origin3d"],[4,"PowerPreference"],[4,"PresentMode"],[4,"PrimitiveTopology"],[3,"RasterizationStateDescriptor"],[3,"RenderBundleEncoderDescriptor"],[4,"StencilOperation"],[3,"StencilStateFaceDescriptor"],[4,"StoreOp"],[3,"SwapChainDescriptor"],[4,"SwapChainStatus"],[4,"TextureAspect"],[4,"TextureComponentType"],[3,"TextureDataLayout"],[4,"TextureDimension"],[4,"TextureFormat"],[4,"TextureViewDimension"],[3,"VertexAttributeDescriptor"],[4,"VertexFormat"],[3,"RenderPassColorAttachmentDescriptorBase"],[3,"RenderPassDepthStencilAttachmentDescriptorBase"],[3,"BufferDescriptorBase"],[3,"CommandEncoderDescriptorBase"],[3,"RenderBundleDescriptorBase"],[3,"TextureDescriptorBase"],[3,"TextureViewDescriptorBase"],[3,"SamplerDescriptorBase"],[3,"RequestAdapterOptions"],[3,"Binding"],[3,"BindGroupDescriptor"],[3,"PipelineLayoutDescriptor"],[3,"ProgrammableStageDescriptor"],[3,"VertexStateDescriptor"],[3,"VertexBufferDescriptor"],[3,"RenderPipelineDescriptor"],[3,"ComputePipelineDescriptor"],[3,"RenderPassDescriptor"],[3,"SwapChainTexture"],[3,"SwapChainFrame"],[3,"BufferCopyView"],[3,"TextureCopyView"],[4,"Maintain"],[4,"ShaderModuleSource"],[4,"BindingResource"],[4,"SwapChainError"],[4,"MapMode"],[3,"WordAligned"],[3,"Instance"],[3,"Adapter"],[3,"Device"],[3,"Buffer"],[3,"BufferSlice"],[3,"Texture"],[3,"CommandEncoder"],[3,"RenderPass"],[3,"ComputePass"],[3,"RenderBundleEncoder"],[3,"Queue"],[3,"SwapChain"],[3,"BackendBit"],[3,"BufferUsage"],[3,"Capabilities"],[3,"ColorWrite"],[3,"Extensions"],[3,"ShaderStage"],[3,"TextureUsage"],[3,"UnsafeExtensions"],[3,"TextureView"],[3,"Sampler"],[3,"Surface"],[3,"BindGroupLayout"],[3,"BindGroup"],[3,"ShaderModule"],[3,"PipelineLayout"],[3,"RenderPipeline"],[3,"ComputePipeline"],[3,"CommandBuffer"],[3,"RenderBundle"],[3,"RequestDeviceError"],[3,"BufferAsyncError"],[3,"BufferView"],[3,"BufferViewMut"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);